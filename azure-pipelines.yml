# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- test

pool:
  vmImage: ubuntu-latest

steps:
- task: Bash@3
  inputs:
    targetType: 'inline'
    script: |
      bash: |
         sudo npm install -g handlebars-cmd
      
         cat <<EOF > owaspzap/nunit-template.hbs
         {{#each site}}
      
         <test-run
             id="2"
             name="Owasp test"
             start-time="{{../[@generated]}}"  >
             <test-suite
                 id="{{@index}}"
                 type="Assembly"
                 name="{{[@name]}}"
                 result="Failed"
                 failed="{{alerts.length}}">
                 <attachments>
                     <attachment>
                         <filePath>owaspzap/report.html</filePath>
                     </attachment>
                 </attachments>
             {{#each alerts}}<test-case
                 id="{{@index}}"
                 name="{{alert}}"
                 result="Failed"
                 fullname="{{alert}}"
                 time="1">
                     <failure>
                         <message>
                             <![CDATA[{{{desc}}}]]>
                         </message>
                         <stack-trace>
                             <![CDATA[
         Solution:
         {{{solution}}}
      
         Reference:
         {{{reference}}}
      
         instances:{{#each instances}}
         * {{uri}}
             - {{method}}
             {{#if evidence}}- {{{evidence}}}{{/if}}
                             {{/each}}]]>
                         </stack-trace>
                     </failure>
             </test-case>
             {{/each}}
             </test-suite>
         </test-run>
         {{/each}}
         EOF
        displayName: 'owasp nunit template'
        condition: always()


- task: DownloadSecureFile@1
  displayName: Get OWASP target context
  inputs:
    secureFile: 'Default Context.context'
 
- task: owaspzap@1
  inputs:
    scantype: 'targetedScan'
    url: 'https://polymath-lilith.azurewebsites.net/'
    provideCustomContext: true
    contextPath: './Default Context.context'
    threshold: 115
    port: '8080'
 
- task: Bash@3
  inputs:
    targetType: 'inline'
    script: |
      - bash: ' handlebars owaspzap/report.json < owaspzap/nunit-template.hbs > owaspzap/test-results.xml'
        displayName: 'generate nunit type file'
        condition: always()

- task: PublishTestResults@2
  displayName: 'Publish Test Results **/TEST-*.xml'
  inputs:
    testResultsFormat: NUnit
    testResultsFiles: 'owaspzap/test-results.xml'
  condition: always()




